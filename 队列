class ArrayQueue {
    private int maxSize;//表示数组的最大容量
    private int front;//队列头
    private int rear;//队列尾
    private int[] arr;//该数组用于存放数据，模拟队列

    //创建队列的构造器
    public ArrayQueue(int arrMaxSize) {
        maxSize = arrMaxSize;
        arr = new int[maxSize];//初始化
        front = -1;//指向头部,fenxichu frot是指向队列头的前一个位置
        rear = -1;//指向队列尾，指向队列尾的数据
    }

    //判断队列是否为满
    public boolean isFull() {
        return rear == maxSize - 1;
    }

    //判断队列是否为空
    public boolean isEmpty() {
        return rear == front;
    }

    //添加数据到队列
    public void addQueue(int n) {
        if (isFull()) {
            System.out.println("队列已满，不能加入~");
            return;
        }
        rear++;
        arr[rear] = n;

    }
    //获取队列的数组，出队列
    public int getQueue() {
        if (isEmpty()) {
            //抛异常
            throw new RuntimeException("队列为空");
        } else {
            front++;
            return arr[front];
        }
    }
        //显示队列的所有数据
        public void showQueue() {
            if (isEmpty()) {
                System.out.println("队列为空");
                return;
            }
            for (int i = 0; i < arr.length; i++) {
                System.out.println("arr[%d]=%d\n"+i+arr[i]);
            }

        }
        //显示队列的头数据
    public int  headQueue(){
        if (isEmpty()){
            throw new RuntimeException("队列为空");
        }
        return arr[front+1];
    }
 }
